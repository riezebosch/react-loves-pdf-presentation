title: react ❤️ pdf
description: A guided demo showing how to add and highlight a new function in a TypeScript file, with themed slides and VS Code integration.
version: 2
demos:
  - title: Introduction Slide
    steps:
      - action: setTheme
        theme: Default Light Modern
      - action: openSlide
        path: .demo/slides/advanced-start.md
  - title: show react app
    steps:
      - action: executeTerminalCommand
        command: npm install && npm run dev
        terminalId: vite
        autoExecute: true
      - action: waitForTimeout
        timeout: 1000
      - action: openWebsite
        url: http://localhost:5173/
        openInVSCode: false
  - title: show @react-pdf/renderer
    steps:
      - action: openWebsite
        url: https://react-pdf.org/
        openInVSCode: true
  - title: install @react-pdf/renderer
    steps:
      - action: executeTerminalCommand
        command: npm install @react-pdf/renderer --save --prefer-offline
        terminalId: npm
  - title: implement PDF Viewer in App.tsx
    steps:
      - action: open
        path: src/App.tsx
      - action: executeVSCodeCommand
        command: workbench.files.action.showActiveFileInExplorer
      - action: replace
        path: src/App.tsx
        insertTypingMode: line-by-line
        position: start:end
        content: |+
          import React from 'react';
          import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';

          // Create styles
          const styles = StyleSheet.create({
            page: {
              flexDirection: 'row',
              backgroundColor: '#E4E4E4'
            },
            section: {
              margin: 10,
              padding: 10,
              flexGrow: 1
            }
          });

          // Create Document Component
          const MyDocument = () => (
            <Document>
              <Page size="A4" style={styles.page}>
                <View style={styles.section}>
                  <Text>Section #1</Text>
                </View>
                <View style={styles.section}>
                  <Text>Section #2</Text>
                </View>
              </Page>
            </Document>
          );
      - action: insert
        path: src/App.tsx
        insertTypingMode: line-by-line
        position: end
        content: |+

          const App = () => (
              <PDFViewer style={{width: '100vw', height: '100vh'}}>
                <MyDocument />
              </PDFViewer>
          );

          export default App;
      - action: insert
        path: src/App.tsx
        position: 3
        content: |+
          import { PDFViewer } from '@react-pdf/renderer';
  - title: (optional) fix deps
    steps:
      - action: executeTerminalCommand
        command: q
        terminalId: vite
      - action: executeTerminalCommand
        command: npm ci && npm run dev
        terminalId: vite
  - title: reset source files
    steps:
      - action: executeTerminalCommand
        command: q
        terminalId: vite
      - action: executeTerminalCommand
        command: git checkout -- . ':!.demo'
        terminalId: vite
      - action: closeTerminal
        terminalId: vite
      - action: closeTerminal
        terminalId: npm
  - title: Review and Recap
    description: Show a slide summarizing the steps taken and what was accomplished in the demo.
    steps:
      - action: openSlide
        path: .demo/slides/advanced-end.md
  - title: Reset Theme
    description: Return the editor theme to its default state to clean up after the demo.
    steps:
      - action: unsetTheme
